#!/bin/bash

set -e

echo "üöÄ –ó–±—ñ—Ä–∫–∞ —Ç–∞ —Ä–æ–∑–≥–æ—Ä—Ç–∞–Ω–Ω—è Simple CNI"

# –ö–æ–ª—å–æ—Ä–∏ –¥–ª—è –≤–∏–≤–æ–¥—É
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –ª–æ–≥—É–≤–∞–Ω–Ω—è
log() {
    echo -e "${GREEN}[INFO]${NC} $1"
}

warn() {
    echo -e "${YELLOW}[WARN]${NC} $1"
}

error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–π Docker
if ! command -v docker &> /dev/null; then
    warn "Docker –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–π. –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –ª–æ–∫–∞–ª—å–Ω—É –∑–±—ñ—Ä–∫—É."
    log "üî® –õ–æ–∫–∞–ª—å–Ω–∞ –∑–±—ñ—Ä–∫–∞..."
    chmod +x build-local.sh
    ./build-local.sh
    exit 0
fi

# –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ –∑–∞–ø—É—â–µ–Ω–∏–π Docker daemon
if ! docker info &> /dev/null; then
    warn "Docker daemon –Ω–µ –∑–∞–ø—É—â–µ–Ω–∏–π. –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –ª–æ–∫–∞–ª—å–Ω—É –∑–±—ñ—Ä–∫—É."
    log "üî® –õ–æ–∫–∞–ª—å–Ω–∞ –∑–±—ñ—Ä–∫–∞..."
    chmod +x build-local.sh
    ./build-local.sh
    exit 0
fi

# –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–π kubectl
if ! command -v kubectl &> /dev/null; then
    error "kubectl –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–π. –ë—É–¥—å –ª–∞—Å–∫–∞, –≤—Å—Ç–∞–Ω–æ–≤—ñ—Ç—å kubectl."
    exit 1
fi

# –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–π Helm
if ! command -v helm &> /dev/null; then
    warn "Helm –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–π. –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ Helm..."
    curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
fi

log "üî® –ó–±—ñ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑—É..."
docker build -t simple-cni:latest .

if [ $? -eq 0 ]; then
    log "‚úÖ Docker –æ–±—Ä–∞–∑ —É—Å–ø—ñ—à–Ω–æ –∑—ñ–±—Ä–∞–Ω–æ"
else
    error "‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–±—ñ—Ä–∫–∏ Docker –æ–±—Ä–∞–∑—É"
    exit 1
fi

# –ü–∏—Ç–∞—î–º–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –ø—Ä–æ —Å–ø–æ—Å—ñ–± —Ä–æ–∑–≥–æ—Ä—Ç–∞–Ω–Ω—è
echo ""
echo "–í–∏–±–µ—Ä—ñ—Ç—å —Å–ø–æ—Å—ñ–± —Ä–æ–∑–≥–æ—Ä—Ç–∞–Ω–Ω—è:"
echo "1) –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ Helm chart (—Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–æ)"
echo "2) –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ –ø—Ä—è–º—ñ YAML —Ñ–∞–π–ª–∏"
echo "3) –¢—ñ–ª—å–∫–∏ –∑–±—ñ—Ä–∫–∞ (–±–µ–∑ —Ä–æ–∑–≥–æ—Ä—Ç–∞–Ω–Ω—è)"
read -p "–í–≤–µ–¥—ñ—Ç—å –Ω–æ–º–µ—Ä (1-3): " choice

case $choice in
    1)
        log "üì¶ –†–æ–∑–≥–æ—Ä—Ç–∞–Ω–Ω—è —á–µ—Ä–µ–∑ Helm..."
        
        # –°—Ç–≤–æ—Ä—é—î–º–æ namespace —è–∫—â–æ –Ω–µ —ñ—Å–Ω—É—î
        kubectl create namespace kube-system --dry-run=client -o yaml | kubectl apply -f -
        
        # –†–æ–∑–≥–æ—Ä—Ç–∞—î–º–æ —á–µ—Ä–µ–∑ Helm
        helm install simple-cni ./helm \
            --namespace kube-system \
            --set image.repository=simple-cni \
            --set image.tag=latest \
            --set image.pullPolicy=IfNotPresent
        
        log "‚úÖ CNI —Ä–æ–∑–≥–æ—Ä–Ω—É—Ç–æ —á–µ—Ä–µ–∑ Helm"
        log "–ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ —Å—Ç–∞—Ç—É—Å: kubectl get pods -n kube-system -l app.kubernetes.io/name=simple-cni"
        ;;
    2)
        log "üìÑ –†–æ–∑–≥–æ—Ä—Ç–∞–Ω–Ω—è —á–µ—Ä–µ–∑ YAML —Ñ–∞–π–ª–∏..."
        
        # –°—Ç–≤–æ—Ä—é—î–º–æ namespace —è–∫—â–æ –Ω–µ —ñ—Å–Ω—É—î
        kubectl create namespace kube-system --dry-run=client -o yaml | kubectl apply -f -
        
        # –ó–∞—Å—Ç–æ—Å–æ–≤—É—î–º–æ YAML —Ñ–∞–π–ª–∏
        kubectl apply -f k8s/rbac.yaml
        kubectl apply -f k8s/cni-config.yaml
        kubectl apply -f k8s/daemonset-init.yaml
        
        log "‚úÖ CNI —Ä–æ–∑–≥–æ—Ä–Ω—É—Ç–æ —á–µ—Ä–µ–∑ YAML —Ñ–∞–π–ª–∏"
        log "–ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ —Å—Ç–∞—Ç—É—Å: kubectl get pods -n kube-system -l app=simple-cni"
        
        # –ù–∞–ª–∞—à—Ç–æ–≤—É—î–º–æ kubelet
        log "üîß –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è kubelet..."
        chmod +x setup-kubelet.sh
        ./setup-kubelet.sh
        ;;
    3)
        log "‚úÖ –ó–±—ñ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –û–±—Ä–∞–∑ –≥–æ—Ç–æ–≤–∏–π –¥–ª—è —Ä–æ–∑–≥–æ—Ä—Ç–∞–Ω–Ω—è."
        log "–î–ª—è —Ä—É—á–Ω–æ–≥–æ —Ä–æ–∑–≥–æ—Ä—Ç–∞–Ω–Ω—è –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ:"
        echo "  kubectl apply -f k8s/"
        echo "  –∞–±–æ"
        echo "  helm install simple-cni ./helm"
        ;;
    *)
        error "–ù–µ–≤—ñ—Ä–Ω–∏–π –≤–∏–±—ñ—Ä"
        exit 1
        ;;
esac

echo ""
log "üìã –ö–æ—Ä–∏—Å–Ω—ñ –∫–æ–º–∞–Ω–¥–∏ –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏:"
echo "  kubectl get pods -n kube-system -l app=simple-cni"
echo "  kubectl logs -n kube-system -l app=simple-cni"
echo "  kubectl describe daemonset simple-cni -n kube-system"
echo ""
log "üîß –î–ª—è –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è CNI —è–∫ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –º–µ—Ä–µ–∂–µ–≤–æ–≥–æ –ø–ª–∞–≥—ñ–Ω–∞:"
echo "  kubectl get nodes -o yaml | grep -A 5 kubelet"
echo "  # –í—ñ–¥—Ä–µ–¥–∞–≥—É–π—Ç–µ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—é kubelet –¥–ª—è –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è simple-cni" 